name: CI
on:
  - push
  - pull_request

#env:
#  FIREPROOF_CORE_VERSION: "^0.19.111"

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          version: 9

      #- uses: actions/checkout@v4
      #  with:
      #    repository: fireproof-storage/fireproof
      #    ref: series_0.19
      #    path: ./fireproof
      #- name: build-fireproof-package
      #  working-directory: ./fireproof
      #  run: |
      #    pnpm install
      #    pnpm run build
      - uses: actions/checkout@v4
        with:
          repository: fireproof-storage/fireproof
          path: ./fireproof
      #    ref: series_0.19
      #      - name: build-fireproof-package
      #        working-directory: ./fireproof
      #        run: |
      #          pnpm install
      #          pnpm run build

      - uses: actions/checkout@v4
        with:
          path: ./connector

      - name: install
        working-directory: ./connector
        run: |
          git config --global url."https://".insteadOf git+ssh://
          git config --global -l
          pnpm install
      #          git config --global url."https://".insteadOf git+ssh://
      #          git config --global -l
      #          pnpm remove @jimpick/fireproof-core
      #          pnpm install -f ../fireproof/dist/fireproof-core/fireproof-core-*.tgz

      - name: format-check
        working-directory: ./connector
        run: |
          pnpm run format --check
      - name: lint
        working-directory: ./connector
        run: |
          pnpm run lint
      - name: build
        working-directory: ./connector
        run: pnpm run build
      #- name: S3 Mock
      #  working-directory: ./connector
      #  run: |
      #    pnpm run prepare-s3-test
      #    sleep 3

      #- uses: actions/checkout@v4
      #  with:
      #    repository: fireproof-storage/fireproof-ucan
      #    ref: main
      #    path: ./fireproof-ucan

      #- uses: JarvusInnovations/background-action@v1
      #  name: ucan-dev-server
      #  with:
      #    working-directory: ./fireproof-ucan
      #    wait-on: |
      #      tcp:localhost:8787
      #    run: |
      #      pnpm install
      #      pnpm run dev &

      #- uses: JarvusInnovations/background-action@v1
      #  name: gateway servers
      #  with:
      #    working-directory: ./connector
      #    run: |
      #      pnpm run setup-gateway-servers &
      #    # partykit:1999 netlify:8888
      #    wait-on: |
      #      tcp:localhost:1999
      #      tcp:localhost:8888

      - name: pretest docker
        working-directory: ./connector
        run: pnpm run pretest-docker

      - name: test
        working-directory: ./connector
        run: |
          pnpm run test

      #- name: smoke-test
      #  working-directory: ./connector
      #  run: |
      #    # this destroys release builds
      #    pnpm run test

      - name: posttest docker
        working-directory: ./connector
        if: success() || failure()
        run: pnpm run posttest-docker

      #- name: stop S3 Mock
      #  working-directory: ./connector
      #  run: |
      #    docker rm -f minio

      - name: publish
        working-directory: ./connector
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git fetch --tags --force
          # we need to have a safe way to store of allowedSigners
          git config --local --add gpg.ssh.allowedSignersFile ../fireproof/allowed_signers
          echo "GITHUB_REF->"$GITHUB_REF
          # test tag signature
          git tag -v $(git describe --tags --abbrev=0)
          # should only run if a tag is set
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          pnpm run publish

      #      - name: smoke
      #        working-directory: ./connector
      #        run: pnpm run smoke
